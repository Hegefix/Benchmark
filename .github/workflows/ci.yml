name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop, 'chore/**', 'feat/**', 'fix/**']

jobs:
  validate:
    name: Validate Branch & Commits
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Validate branch name
        run: node scripts/validate-branch-name.js

      - name: Validate commit messages
        if: github.event_name == 'pull_request'
        run: |
          echo "Validating commit messages in PR..."
          git log origin/${{ github.base_ref }}..${{ github.sha }} --pretty=format:"%s" | while read msg; do
            echo "$msg" > /tmp/commit-msg.txt
            node scripts/validate-commit-msg.js /tmp/commit-msg.txt || exit 1
          done

  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: [validate]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Run TypeScript type check
        run: yarn typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [validate]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Run tests with coverage
        run: yarn test:ci

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
          retention-days: 7

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [validate, lint-and-typecheck, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Android
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon

  build-ios:
    name: Build iOS
    runs-on: macos-15 # macOS 15 includes Xcode 16.1+ (required for RN 0.82.1)
    needs: [validate, lint-and-typecheck, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true
          working-directory: ios

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods
        run: |
          cd ios
          pod install

      - name: Build iOS
        run: |
          cd ios
          xcodebuild -workspace Benchmark.xcworkspace \
            -scheme Benchmark \
            -configuration Debug \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 16' \
            build \
            CODE_SIGNING_ALLOWED=NO
